[
  {
    "objectID": "hw3.html",
    "href": "hw3.html",
    "title": "Homework 3",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv? &gt; ../MyData.csv\nWhat are the major benefits of using R projects? &gt; - Keep related files organized &gt; - Simplifies the process of setting the working directory &gt; - Facilitates collaboration with Git integration\nWhat is git and what is GitHub? &gt; - Git is a version control system for tracking changes in files and coordinating work on those files among multiple people. &gt; - GitHub is a web-based platform that uses Git for version control and provides hosting for software development and version control using Git.\nWhat are the two main differences between a tibble and a data.frame? &gt; - Tibbles do not convert character vectors to factors by default. &gt; - Tibbles are more modern and have better printing methods that show only the top 10 rows and the columns that fit on the screen.\nRewrite the following nested function call using base R’s chaining operator:\n\nas_tibble(iris) |&gt; select(starts_with(“Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)\n\nWhat is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\n\nLong format data has one column for all values and another column for variable names. It is generally preferred for statistical analysis.Wide format data has separate columns for each variable.\nTask 2: Reading Delimited Data\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Read the glass data from the URL\nglass_data &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\", col_names = FALSE)\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Define the column names\ncolnames(glass_data) &lt;- c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type_of_glass\")\n\n# Print the tibble\nglass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n# Modify the Type_of_glass variable\nglass_data &lt;- glass_data %&gt;%\n  mutate(Type_of_glass = case_when(\n    Type_of_glass == 1 ~ \"building_windows_float_processed\",\n    Type_of_glass == 2 ~ \"building_windows_non_float_processed\",\n    Type_of_glass == 3 ~ \"vehicle_windows_float_processed\",\n    Type_of_glass == 5 ~ \"containers\",\n    Type_of_glass == 6 ~ \"tableware\",\n    Type_of_glass == 7 ~ \"headlamps\"\n  ))\n\n# Filter the data\nglass_filtered &lt;- glass_data %&gt;%\n  filter(Fe &lt; 0.2, Type_of_glass %in% c(\"tableware\", \"headlamps\"))\n\n# Print the filtered data\nglass_filtered\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows\n\n\nYeast Data\n\nlibrary(tidyverse)\n\n# Define the URL for the yeast data\nyeast_url &lt;- \"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\"\n\n# Read the yeast data from the URL with a custom delimiter of two spaces\nyeast_data &lt;- read_delim(yeast_url, delim = \"  \", col_names = FALSE, trim_ws = TRUE)\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"  \"\nchr (2): X1, X10\ndbl (8): X2, X3, X4, X5, X6, X7, X8, X9\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Define the correct column names\ncolumn_names &lt;- c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \"vac\", \"nuc\", \"class\")\n\n# Assign the column names to the yeast_data tibble\ncolnames(yeast_data) &lt;- column_names\n\n# Print the tibble to verify the data\nprint(yeast_data)\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n# Remove the seq_name and nuc columns\nyeast_data &lt;- yeast_data %&gt;%\n  select(-seq_name, -nuc)\n\n# Add columns for the mean and median of each numeric variable at each class grouping\nyeast_summary &lt;- yeast_data %&gt;%\n  group_by(class) %&gt;%\n  summarize(across(c(mcg, gvh, alm, mit, erl, pox, vac), \n                   list(mean = mean, median = median), \n                   .names = \"{.fn}_{.col}\"))\n\n# Print the summarized data\nprint(yeast_summary)\n\n# A tibble: 44 × 15\n   class    mean_mcg median_mcg mean_gvh median_gvh mean_alm median_alm mean_mit\n   &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1 0.22  C…       NA         NA    0.496      0.505    0.500      0.47     0.536\n 2 0.22  E…       NA         NA    0.7        0.7      0.84       0.84     0.49 \n 3 0.22  M…       NA         NA    0.79       0.79     0.57       0.57     0.41 \n 4 0.22  M…       NA         NA    0.41       0.41     0.53       0.53     0.465\n 5 0.22  M…       NA         NA    0.536      0.52     0.572      0.56     0.472\n 6 0.22  N…       NA         NA    0.42       0.42     0.31       0.31     0.5  \n 7 0.22  P…       NA         NA    0.46       0.46     0.37       0.37     0.48 \n 8 0.25  M…       NA         NA    0.47       0.47     0.41       0.41     0.53 \n 9 0.25  N…       NA         NA    0.4        0.4      0.335      0.335    0.595\n10 0.26  C…       NA         NA    0.5        0.5      0.46       0.46     0.52 \n# ℹ 34 more rows\n# ℹ 7 more variables: median_mit &lt;dbl&gt;, mean_erl &lt;dbl&gt;, median_erl &lt;dbl&gt;,\n#   mean_pox &lt;dbl&gt;, median_pox &lt;dbl&gt;, mean_vac &lt;dbl&gt;, median_vac &lt;dbl&gt;\n\n\nWine Data\n\n\nlibrary(readxl)\n\n# Read the white wine data from the first sheet\nwhite_wine &lt;- read_excel(\"C:/Users/karen/Downloads/hw3 data/white-wine.xlsx\", sheet = 1)\n\n# Print the tibble to verify the data\nwhite_wine\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n# Read the variable names from the second sheet\ncolumn_names &lt;- read_excel(\"C:/Users/karen/Downloads/hw3 data/white-wine.xlsx\", sheet = 2)\n\n# Overwrite the current column names\ncolnames(white_wine) &lt;- column_names[[1]]\n\n# Add a column indicating the wine type\nwhite_wine &lt;- white_wine %&gt;%\n  mutate(type = \"white\")\n\n# Print the updated tibble\nwhite_wine\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(readxl)\n\n# Define the URL for the red wine data\nred_wine_url &lt;- \"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\"\n\n# Read the red wine data from the URL with a semi-colon delimiter\nred_wine_data &lt;- read_delim(red_wine_url, delim = \";\", col_names = TRUE)\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Print the tibble to verify the data\nprint(red_wine_data)\n\n# A tibble: 1,599 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1             7.4               0.7           0                 1.9     0.076\n 2             7.8               0.88          0                 2.6     0.098\n 3             7.8               0.76          0.04              2.3     0.092\n 4            11.2               0.28          0.56              1.9     0.075\n 5             7.4               0.7           0                 1.9     0.076\n 6             7.4               0.66          0                 1.8     0.075\n 7             7.9               0.6           0.06              1.6     0.069\n 8             7.3               0.65          0                 1.2     0.065\n 9             7.8               0.58          0.02              2       0.073\n10             7.5               0.5           0.36              6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n# Read the new column names from the second sheet of the white wine Excel file\nnew_column_names &lt;- read_excel(\"C:/Users/karen/Downloads/hw3 data/white-wine.xlsx\", sheet = 2) %&gt;%\n  pull()\n\n# Assign the new column names to the red wine data\ncolnames(red_wine_data) &lt;- new_column_names\n\n# Print the tibble to verify the new column names\nprint(red_wine_data)\n\n# A tibble: 1,599 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.4             0.7         0               1.9     0.076\n 2           7.8             0.88        0               2.6     0.098\n 3           7.8             0.76        0.04            2.3     0.092\n 4          11.2             0.28        0.56            1.9     0.075\n 5           7.4             0.7         0               1.9     0.076\n 6           7.4             0.66        0               1.8     0.075\n 7           7.9             0.6         0.06            1.6     0.069\n 8           7.3             0.65        0               1.2     0.065\n 9           7.8             0.58        0.02            2       0.073\n10           7.5             0.5         0.36            6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n# Add a column denoting the type as \"red\"\nred_wine_data &lt;- red_wine_data %&gt;%\n  mutate(type = \"red\")\n\n# Print the tibble to verify the addition of the new column\nprint(red_wine_data)\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.4             0.7         0               1.9     0.076\n 2           7.8             0.88        0               2.6     0.098\n 3           7.8             0.76        0.04            2.3     0.092\n 4          11.2             0.28        0.56            1.9     0.075\n 5           7.4             0.7         0               1.9     0.076\n 6           7.4             0.66        0               1.8     0.075\n 7           7.9             0.6         0.06            1.6     0.069\n 8           7.3             0.65        0               1.2     0.065\n 9           7.8             0.58        0.02            2       0.073\n10           7.5             0.5         0.36            6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n# Combine the two data sets\nwine_data &lt;- bind_rows(white_wine, red_wine_data)\n\n# Print the combined data\nwine_data\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n# Filter and summarize the combined data\nhigh_quality_wine &lt;- wine_data %&gt;%\n  filter(quality &gt; 6.5, alcohol &lt; 132) %&gt;%\n  arrange(desc(quality)) %&gt;%\n  select(contains(\"acid\"), alcohol, type, quality) %&gt;%\n  group_by(quality) %&gt;%\n  summarize(\n    mean_alcohol = mean(alcohol),\n    sd_alcohol = sd(alcohol),\n    .groups = \"drop\"\n  )\n\n# Print the filtered and summarized data\nhigh_quality_wine\n\n# A tibble: 3 × 3\n  quality mean_alcohol sd_alcohol\n    &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1       7         78.7       48.9\n2       8         94.1       42.8\n3       9        122.        10.1\n\n\nDatabase Practice\n\n# Load necessary libraries\nlibrary(DBI)\nlibrary(RSQLite)\nlibrary(dplyr)\n\n# Connect to the Lahman database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"C:/Users/karen/Downloads/hw3 data/lahman.db\")\n\n# List all tables in the database\ntables &lt;- dbListTables(con)\nprint(tables)\n\n [1] \"AllstarFull\"         \"Appearances\"         \"AwardsManagers\"     \n [4] \"AwardsPlayers\"       \"AwardsShareManagers\" \"AwardsSharePlayers\" \n [7] \"Batting\"             \"BattingPost\"         \"CollegePlaying\"     \n[10] \"Fielding\"            \"FieldingOF\"          \"FieldingOFsplit\"    \n[13] \"FieldingPost\"        \"HallOfFame\"          \"HomeGames\"          \n[16] \"LahmanData\"          \"Managers\"            \"ManagersHalf\"       \n[19] \"Parks\"               \"People\"              \"Pitching\"           \n[22] \"PitchingPost\"        \"Salaries\"            \"Schools\"            \n[25] \"SeriesPost\"          \"Teams\"               \"TeamsFranchises\"    \n[28] \"TeamsHalf\"           \"battingLabels\"       \"fieldingLabels\"     \n[31] \"pitchingLabels\"     \n\n# Retrieve data from the Teams table for the year 2015 using dplyr\nteams_2015 &lt;- tbl(con, \"Teams\") %&gt;%\n  filter(yearID == 2015) %&gt;%\n  collect()\n\n# Print the retrieved data\nprint(teams_2015)\n\n# A tibble: 30 × 48\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ 20 more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n# Retrieve data from the Teams table for the year 2015 using SQL\nteams_2015_sql &lt;- tbl(con, sql(\"SELECT * FROM Teams WHERE yearID = 2015\")) %&gt;%\n  collect()\n\n# Print the retrieved data\nprint(teams_2015_sql)\n\n# A tibble: 30 × 48\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ 20 more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n# Retrieve all players in the Hall of Fame, the year they were voted in, and their category\nhall_of_fame &lt;- tbl(con, \"HallOfFame\") %&gt;%\n  filter(inducted == \"Y\") %&gt;%\n  select(playerID, yearID, category) %&gt;%\n  collect()\n\n# Print the retrieved data\nprint(hall_of_fame)\n\n# A tibble: 340 × 3\n   playerID  yearID category         \n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;            \n 1 cobbty01    1936 Player           \n 2 ruthba01    1936 Player           \n 3 wagneho01   1936 Player           \n 4 mathech01   1936 Player           \n 5 johnswa01   1936 Player           \n 6 lajoina01   1937 Player           \n 7 speaktr01   1937 Player           \n 8 youngcy01   1937 Player           \n 9 bulkemo99   1937 Pioneer/Executive\n10 johnsba99   1937 Pioneer/Executive\n# ℹ 330 more rows\n\n# Retrieve People table as a local data frame\npeople &lt;- tbl(con, \"People\") %&gt;%\n  select(playerID, nameFirst, nameLast) %&gt;%\n  collect()\n\n# Combine Hall of Fame data with People table to add first and last names\nhall_of_fame_with_names &lt;- hall_of_fame %&gt;%\n  inner_join(people, by = \"playerID\")\n\n# Print the combined data\nprint(hall_of_fame_with_names)\n\n# A tibble: 338 × 5\n   playerID  yearID category          nameFirst nameLast \n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;     &lt;chr&gt;    \n 1 cobbty01    1936 Player            Ty        Cobb     \n 2 ruthba01    1936 Player            Babe      Ruth     \n 3 wagneho01   1936 Player            Honus     Wagner   \n 4 mathech01   1936 Player            Christy   Mathewson\n 5 johnswa01   1936 Player            Walter    Johnson  \n 6 lajoina01   1937 Player            Nap       Lajoie   \n 7 speaktr01   1937 Player            Tris      Speaker  \n 8 youngcy01   1937 Player            Cy        Young    \n 9 bulkemo99   1937 Pioneer/Executive Morgan    Bulkeley \n10 johnsba99   1937 Pioneer/Executive Ban       Johnson  \n# ℹ 328 more rows\n\n# Retrieve and summarize manager data\nmanagers_summary &lt;- tbl(con, \"Managers\") %&gt;%\n  select(playerID, G, W, L) %&gt;%\n  group_by(playerID) %&gt;%\n  summarize(\n    G_managed = sum(G, na.rm = TRUE),\n    Total_W = sum(W, na.rm = TRUE),\n    Total_L = sum(L, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(win_loss_percentage = Total_W / G_managed) %&gt;%\n  arrange(desc(win_loss_percentage)) %&gt;%\n  collect()\n\n# Print the summarized data\nprint(managers_summary)\n\n# A tibble: 749 × 5\n   playerID  G_managed Total_W Total_L win_loss_percentage\n   &lt;chr&gt;         &lt;int&gt;   &lt;int&gt;   &lt;int&gt;               &lt;int&gt;\n 1 bensove01         1       1       0                   1\n 2 burwebi01         1       1       0                   1\n 3 cohenan01         1       1       0                   1\n 4 ebeldi99          3       3       0                   1\n 5 falkbi01          1       1       0                   1\n 6 hardeme01         3       3       0                   1\n 7 simmote01         1       1       0                   1\n 8 steinte01         2       2       0                   1\n 9 sukefcl01         2       2       0                   1\n10 tamarjo01         1       1       0                   1\n# ℹ 739 more rows\n\n# Combine hall of fame and manager data\ncombined_data &lt;- hall_of_fame_with_names %&gt;%\n  inner_join(managers_summary, by = \"playerID\")\n\n# Print the combined data\nprint(combined_data)\n\n# A tibble: 97 × 9\n   playerID  yearID category        nameFirst nameLast G_managed Total_W Total_L\n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;     &lt;chr&gt;        &lt;int&gt;   &lt;int&gt;   &lt;int&gt;\n 1 cobbty01    1936 Player          Ty        Cobb           933     479     444\n 2 wagneho01   1936 Player          Honus     Wagner           5       1       4\n 3 mathech01   1936 Player          Christy   Mathews…       346     164     176\n 4 johnswa01   1936 Player          Walter    Johnson        966     529     432\n 5 lajoina01   1937 Player          Nap       Lajoie         700     377     309\n 6 speaktr01   1937 Player          Tris      Speaker       1139     617     520\n 7 youngcy01   1937 Player          Cy        Young            6       3       3\n 8 mackco01    1937 Manager         Connie    Mack          7755    3731    3948\n 9 mcgrajo01   1937 Manager         John      McGraw        4769    2763    1948\n10 wrighge01   1937 Pioneer/Execut… George    Wright          85      59      25\n# ℹ 87 more rows\n# ℹ 1 more variable: win_loss_percentage &lt;int&gt;"
  },
  {
    "objectID": "hw3.html#task-1-conceptual-questions",
    "href": "hw3.html#task-1-conceptual-questions",
    "title": "Homework 3",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv? &gt; ../MyData.csv\nWhat are the major benefits of using R projects? &gt; - Keep related files organized &gt; - Simplifies the process of setting the working directory &gt; - Facilitates collaboration with Git integration\nWhat is git and what is GitHub? &gt; - Git is a version control system for tracking changes in files and coordinating work on those files among multiple people. &gt; - GitHub is a web-based platform that uses Git for version control and provides hosting for software development and version control using Git.\nWhat are the two main differences between a tibble and a data.frame? &gt; - Tibbles do not convert character vectors to factors by default. &gt; - Tibbles are more modern and have better printing methods that show only the top 10 rows and the columns that fit on the screen.\nRewrite the following nested function call using base R’s chaining operator:\n\nas_tibble(iris) |&gt; select(starts_with(“Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)\n\nWhat is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\n\nLong format data has one column for all values and another column for variable names. It is generally preferred for statistical analysis.Wide format data has separate columns for each variable.\nTask 2: Reading Delimited Data"
  },
  {
    "objectID": "hw3.html#glass-data",
    "href": "hw3.html#glass-data",
    "title": "Homework 3",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Read the glass data from the URL\nglass_data &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\", col_names = FALSE)\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Define the column names\ncolnames(glass_data) &lt;- c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type_of_glass\")\n\n# Print the tibble\nglass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n# Modify the Type_of_glass variable\nglass_data &lt;- glass_data %&gt;%\n  mutate(Type_of_glass = case_when(\n    Type_of_glass == 1 ~ \"building_windows_float_processed\",\n    Type_of_glass == 2 ~ \"building_windows_non_float_processed\",\n    Type_of_glass == 3 ~ \"vehicle_windows_float_processed\",\n    Type_of_glass == 5 ~ \"containers\",\n    Type_of_glass == 6 ~ \"tableware\",\n    Type_of_glass == 7 ~ \"headlamps\"\n  ))\n\n# Filter the data\nglass_filtered &lt;- glass_data %&gt;%\n  filter(Fe &lt; 0.2, Type_of_glass %in% c(\"tableware\", \"headlamps\"))\n\n# Print the filtered data\nglass_filtered\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows\n\n\nYeast Data\n\nlibrary(tidyverse)\n\n# Define the URL for the yeast data\nyeast_url &lt;- \"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\"\n\n# Read the yeast data from the URL with a custom delimiter of two spaces\nyeast_data &lt;- read_delim(yeast_url, delim = \"  \", col_names = FALSE, trim_ws = TRUE)\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"  \"\nchr (2): X1, X10\ndbl (8): X2, X3, X4, X5, X6, X7, X8, X9\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Define the correct column names\ncolumn_names &lt;- c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \"vac\", \"nuc\", \"class\")\n\n# Assign the column names to the yeast_data tibble\ncolnames(yeast_data) &lt;- column_names\n\n# Print the tibble to verify the data\nprint(yeast_data)\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n# Remove the seq_name and nuc columns\nyeast_data &lt;- yeast_data %&gt;%\n  select(-seq_name, -nuc)\n\n# Add columns for the mean and median of each numeric variable at each class grouping\nyeast_summary &lt;- yeast_data %&gt;%\n  group_by(class) %&gt;%\n  summarize(across(c(mcg, gvh, alm, mit, erl, pox, vac), \n                   list(mean = mean, median = median), \n                   .names = \"{.fn}_{.col}\"))\n\n# Print the summarized data\nprint(yeast_summary)\n\n# A tibble: 44 × 15\n   class    mean_mcg median_mcg mean_gvh median_gvh mean_alm median_alm mean_mit\n   &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1 0.22  C…       NA         NA    0.496      0.505    0.500      0.47     0.536\n 2 0.22  E…       NA         NA    0.7        0.7      0.84       0.84     0.49 \n 3 0.22  M…       NA         NA    0.79       0.79     0.57       0.57     0.41 \n 4 0.22  M…       NA         NA    0.41       0.41     0.53       0.53     0.465\n 5 0.22  M…       NA         NA    0.536      0.52     0.572      0.56     0.472\n 6 0.22  N…       NA         NA    0.42       0.42     0.31       0.31     0.5  \n 7 0.22  P…       NA         NA    0.46       0.46     0.37       0.37     0.48 \n 8 0.25  M…       NA         NA    0.47       0.47     0.41       0.41     0.53 \n 9 0.25  N…       NA         NA    0.4        0.4      0.335      0.335    0.595\n10 0.26  C…       NA         NA    0.5        0.5      0.46       0.46     0.52 \n# ℹ 34 more rows\n# ℹ 7 more variables: median_mit &lt;dbl&gt;, mean_erl &lt;dbl&gt;, median_erl &lt;dbl&gt;,\n#   mean_pox &lt;dbl&gt;, median_pox &lt;dbl&gt;, mean_vac &lt;dbl&gt;, median_vac &lt;dbl&gt;\n\n\nWine Data\n\n\nlibrary(readxl)\n\n# Read the white wine data from the first sheet\nwhite_wine &lt;- read_excel(\"C:/Users/karen/Downloads/hw3 data/white-wine.xlsx\", sheet = 1)\n\n# Print the tibble to verify the data\nwhite_wine\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n# Read the variable names from the second sheet\ncolumn_names &lt;- read_excel(\"C:/Users/karen/Downloads/hw3 data/white-wine.xlsx\", sheet = 2)\n\n# Overwrite the current column names\ncolnames(white_wine) &lt;- column_names[[1]]\n\n# Add a column indicating the wine type\nwhite_wine &lt;- white_wine %&gt;%\n  mutate(type = \"white\")\n\n# Print the updated tibble\nwhite_wine\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(readxl)\n\n# Define the URL for the red wine data\nred_wine_url &lt;- \"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\"\n\n# Read the red wine data from the URL with a semi-colon delimiter\nred_wine_data &lt;- read_delim(red_wine_url, delim = \";\", col_names = TRUE)\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Print the tibble to verify the data\nprint(red_wine_data)\n\n# A tibble: 1,599 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1             7.4               0.7           0                 1.9     0.076\n 2             7.8               0.88          0                 2.6     0.098\n 3             7.8               0.76          0.04              2.3     0.092\n 4            11.2               0.28          0.56              1.9     0.075\n 5             7.4               0.7           0                 1.9     0.076\n 6             7.4               0.66          0                 1.8     0.075\n 7             7.9               0.6           0.06              1.6     0.069\n 8             7.3               0.65          0                 1.2     0.065\n 9             7.8               0.58          0.02              2       0.073\n10             7.5               0.5           0.36              6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n# Read the new column names from the second sheet of the white wine Excel file\nnew_column_names &lt;- read_excel(\"C:/Users/karen/Downloads/hw3 data/white-wine.xlsx\", sheet = 2) %&gt;%\n  pull()\n\n# Assign the new column names to the red wine data\ncolnames(red_wine_data) &lt;- new_column_names\n\n# Print the tibble to verify the new column names\nprint(red_wine_data)\n\n# A tibble: 1,599 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.4             0.7         0               1.9     0.076\n 2           7.8             0.88        0               2.6     0.098\n 3           7.8             0.76        0.04            2.3     0.092\n 4          11.2             0.28        0.56            1.9     0.075\n 5           7.4             0.7         0               1.9     0.076\n 6           7.4             0.66        0               1.8     0.075\n 7           7.9             0.6         0.06            1.6     0.069\n 8           7.3             0.65        0               1.2     0.065\n 9           7.8             0.58        0.02            2       0.073\n10           7.5             0.5         0.36            6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n# Add a column denoting the type as \"red\"\nred_wine_data &lt;- red_wine_data %&gt;%\n  mutate(type = \"red\")\n\n# Print the tibble to verify the addition of the new column\nprint(red_wine_data)\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.4             0.7         0               1.9     0.076\n 2           7.8             0.88        0               2.6     0.098\n 3           7.8             0.76        0.04            2.3     0.092\n 4          11.2             0.28        0.56            1.9     0.075\n 5           7.4             0.7         0               1.9     0.076\n 6           7.4             0.66        0               1.8     0.075\n 7           7.9             0.6         0.06            1.6     0.069\n 8           7.3             0.65        0               1.2     0.065\n 9           7.8             0.58        0.02            2       0.073\n10           7.5             0.5         0.36            6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n# Combine the two data sets\nwine_data &lt;- bind_rows(white_wine, red_wine_data)\n\n# Print the combined data\nwine_data\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n# Filter and summarize the combined data\nhigh_quality_wine &lt;- wine_data %&gt;%\n  filter(quality &gt; 6.5, alcohol &lt; 132) %&gt;%\n  arrange(desc(quality)) %&gt;%\n  select(contains(\"acid\"), alcohol, type, quality) %&gt;%\n  group_by(quality) %&gt;%\n  summarize(\n    mean_alcohol = mean(alcohol),\n    sd_alcohol = sd(alcohol),\n    .groups = \"drop\"\n  )\n\n# Print the filtered and summarized data\nhigh_quality_wine\n\n# A tibble: 3 × 3\n  quality mean_alcohol sd_alcohol\n    &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1       7         78.7       48.9\n2       8         94.1       42.8\n3       9        122.        10.1\n\n\nDatabase Practice\n\n# Load necessary libraries\nlibrary(DBI)\nlibrary(RSQLite)\nlibrary(dplyr)\n\n# Connect to the Lahman database\ncon &lt;- dbConnect(RSQLite::SQLite(), \"C:/Users/karen/Downloads/hw3 data/lahman.db\")\n\n# List all tables in the database\ntables &lt;- dbListTables(con)\nprint(tables)\n\n [1] \"AllstarFull\"         \"Appearances\"         \"AwardsManagers\"     \n [4] \"AwardsPlayers\"       \"AwardsShareManagers\" \"AwardsSharePlayers\" \n [7] \"Batting\"             \"BattingPost\"         \"CollegePlaying\"     \n[10] \"Fielding\"            \"FieldingOF\"          \"FieldingOFsplit\"    \n[13] \"FieldingPost\"        \"HallOfFame\"          \"HomeGames\"          \n[16] \"LahmanData\"          \"Managers\"            \"ManagersHalf\"       \n[19] \"Parks\"               \"People\"              \"Pitching\"           \n[22] \"PitchingPost\"        \"Salaries\"            \"Schools\"            \n[25] \"SeriesPost\"          \"Teams\"               \"TeamsFranchises\"    \n[28] \"TeamsHalf\"           \"battingLabels\"       \"fieldingLabels\"     \n[31] \"pitchingLabels\"     \n\n# Retrieve data from the Teams table for the year 2015 using dplyr\nteams_2015 &lt;- tbl(con, \"Teams\") %&gt;%\n  filter(yearID == 2015) %&gt;%\n  collect()\n\n# Print the retrieved data\nprint(teams_2015)\n\n# A tibble: 30 × 48\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ 20 more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n# Retrieve data from the Teams table for the year 2015 using SQL\nteams_2015_sql &lt;- tbl(con, sql(\"SELECT * FROM Teams WHERE yearID = 2015\")) %&gt;%\n  collect()\n\n# Print the retrieved data\nprint(teams_2015_sql)\n\n# A tibble: 30 × 48\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ 20 more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n# Retrieve all players in the Hall of Fame, the year they were voted in, and their category\nhall_of_fame &lt;- tbl(con, \"HallOfFame\") %&gt;%\n  filter(inducted == \"Y\") %&gt;%\n  select(playerID, yearID, category) %&gt;%\n  collect()\n\n# Print the retrieved data\nprint(hall_of_fame)\n\n# A tibble: 340 × 3\n   playerID  yearID category         \n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;            \n 1 cobbty01    1936 Player           \n 2 ruthba01    1936 Player           \n 3 wagneho01   1936 Player           \n 4 mathech01   1936 Player           \n 5 johnswa01   1936 Player           \n 6 lajoina01   1937 Player           \n 7 speaktr01   1937 Player           \n 8 youngcy01   1937 Player           \n 9 bulkemo99   1937 Pioneer/Executive\n10 johnsba99   1937 Pioneer/Executive\n# ℹ 330 more rows\n\n# Retrieve People table as a local data frame\npeople &lt;- tbl(con, \"People\") %&gt;%\n  select(playerID, nameFirst, nameLast) %&gt;%\n  collect()\n\n# Combine Hall of Fame data with People table to add first and last names\nhall_of_fame_with_names &lt;- hall_of_fame %&gt;%\n  inner_join(people, by = \"playerID\")\n\n# Print the combined data\nprint(hall_of_fame_with_names)\n\n# A tibble: 338 × 5\n   playerID  yearID category          nameFirst nameLast \n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;     &lt;chr&gt;    \n 1 cobbty01    1936 Player            Ty        Cobb     \n 2 ruthba01    1936 Player            Babe      Ruth     \n 3 wagneho01   1936 Player            Honus     Wagner   \n 4 mathech01   1936 Player            Christy   Mathewson\n 5 johnswa01   1936 Player            Walter    Johnson  \n 6 lajoina01   1937 Player            Nap       Lajoie   \n 7 speaktr01   1937 Player            Tris      Speaker  \n 8 youngcy01   1937 Player            Cy        Young    \n 9 bulkemo99   1937 Pioneer/Executive Morgan    Bulkeley \n10 johnsba99   1937 Pioneer/Executive Ban       Johnson  \n# ℹ 328 more rows\n\n# Retrieve and summarize manager data\nmanagers_summary &lt;- tbl(con, \"Managers\") %&gt;%\n  select(playerID, G, W, L) %&gt;%\n  group_by(playerID) %&gt;%\n  summarize(\n    G_managed = sum(G, na.rm = TRUE),\n    Total_W = sum(W, na.rm = TRUE),\n    Total_L = sum(L, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(win_loss_percentage = Total_W / G_managed) %&gt;%\n  arrange(desc(win_loss_percentage)) %&gt;%\n  collect()\n\n# Print the summarized data\nprint(managers_summary)\n\n# A tibble: 749 × 5\n   playerID  G_managed Total_W Total_L win_loss_percentage\n   &lt;chr&gt;         &lt;int&gt;   &lt;int&gt;   &lt;int&gt;               &lt;int&gt;\n 1 bensove01         1       1       0                   1\n 2 burwebi01         1       1       0                   1\n 3 cohenan01         1       1       0                   1\n 4 ebeldi99          3       3       0                   1\n 5 falkbi01          1       1       0                   1\n 6 hardeme01         3       3       0                   1\n 7 simmote01         1       1       0                   1\n 8 steinte01         2       2       0                   1\n 9 sukefcl01         2       2       0                   1\n10 tamarjo01         1       1       0                   1\n# ℹ 739 more rows\n\n# Combine hall of fame and manager data\ncombined_data &lt;- hall_of_fame_with_names %&gt;%\n  inner_join(managers_summary, by = \"playerID\")\n\n# Print the combined data\nprint(combined_data)\n\n# A tibble: 97 × 9\n   playerID  yearID category        nameFirst nameLast G_managed Total_W Total_L\n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;     &lt;chr&gt;        &lt;int&gt;   &lt;int&gt;   &lt;int&gt;\n 1 cobbty01    1936 Player          Ty        Cobb           933     479     444\n 2 wagneho01   1936 Player          Honus     Wagner           5       1       4\n 3 mathech01   1936 Player          Christy   Mathews…       346     164     176\n 4 johnswa01   1936 Player          Walter    Johnson        966     529     432\n 5 lajoina01   1937 Player          Nap       Lajoie         700     377     309\n 6 speaktr01   1937 Player          Tris      Speaker       1139     617     520\n 7 youngcy01   1937 Player          Cy        Young            6       3       3\n 8 mackco01    1937 Manager         Connie    Mack          7755    3731    3948\n 9 mcgrajo01   1937 Manager         John      McGraw        4769    2763    1948\n10 wrighge01   1937 Pioneer/Execut… George    Wright          85      59      25\n# ℹ 87 more rows\n# ℹ 1 more variable: win_loss_percentage &lt;int&gt;"
  }
]